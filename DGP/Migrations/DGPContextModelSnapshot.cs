// <auto-generated />
using System;
using DGP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DGP.Migrations
{
    [DbContext(typeof(DGPContext))]
    partial class DGPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Laboratorios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Sinave")
                        .HasColumnType("int");

                    b.Property<int>("Institucion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TLaboratorios");
                });

            modelBuilder.Entity("Manejo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo_Atencion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TManejo");
                });

            modelBuilder.Entity("Provincias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo_One")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TProvincias");
                });

            modelBuilder.Entity("TMuestras", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int?>("Provinciaid")
                        .HasColumnType("int");

                    b.Property<string>("apellido_paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_muestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_tipo_atencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("embarazada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_nacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_reporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_toma_muestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("manejoId")
                        .HasColumnType("int");

                    b.Property<string>("nombre_paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primera_muestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tiene_sintomas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_muestra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("Provinciaid");

                    b.HasIndex("manejoId");

                    b.ToTable("TMuestras");
                });

            modelBuilder.Entity("TMuestras", b =>
                {
                    b.HasOne("Laboratorios", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId");

                    b.HasOne("Provincias", "Provincia")
                        .WithMany()
                        .HasForeignKey("Provinciaid");

                    b.HasOne("Manejo", "manejo")
                        .WithMany()
                        .HasForeignKey("manejoId");
                });
#pragma warning restore 612, 618
        }
    }
}
